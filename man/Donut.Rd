% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rhtmlDonut.R
\name{Donut}
\alias{Donut}
\title{Create a Donut plot}
\usage{
Donut(values, labels, values.font = NULL, values.size = 10,
  values.color = NULL, values.display = "percentage", values.thres = NULL,
  values.order = "descending", labels.font = NULL, labels.size = 10,
  labels.color = NULL, labels.minFontSize = 8, labels.inner = FALSE,
  groups = NULL, groups.font = NULL, groups.size = 10,
  groups.color = NULL, groups.order = "descending", prefix = NULL,
  suffix = NULL, order.control = FALSE, border.color = "white",
  gradient = FALSE, inner.radius = "80\%", max.label.length = NULL,
  width = NULL, height = NULL)
}
\arguments{
\item{values}{vector of real numbers}

\item{labels}{character vector, length must be the same as \code{values}}

\item{values.font}{(optional) font for \code{values}. Default is "Arial".}

\item{values.size}{(optional) desired font size in pixels for \code{values}. Default is 10.}

\item{values.color}{(optional) colors for \code{values}. If not provided then default colors are generated. If \code{groups} are provided or \code{gradient} set to \code{FALSE}, then generate colors using D3 library. If \code{groups} not provided, then can generate gradient colors when \code{gradient} is \code{TRUE}.}

\item{values.display}{(optional) choice of c("percentage", "original"). If "percentage" then values are converted to percentages. If "original" display the original data. Default is "percentage".}

\item{values.thres}{(optional) threshold of the minimum value in percentage that will have a label attached. Range is [0,100] and default is 0.3.}

\item{values.order}{(optional) ordering of \code{values} = c("descending", "initial", "alphabetical"). Default is "descending".}

\item{labels.font}{(optional) font for \code{labels}. Default is "Arial"}

\item{labels.size}{(optional) desired font size in pixels for \code{labels}. Default is 10.}

\item{labels.color}{(optional) a hex value to set the label color for \code{labels}. Default is "#333333".}

\item{labels.minFontSize}{(optional) the minimum font size in pixels for labels. Default is 8.}

\item{labels.inner}{(optional) boolean. if \code{TRUE} then add inner labels to the pie only if both of these conditions are satisfied: (1) no \code{groups} and (2) \code{values.order} is "descending". Defaults to \code{FALSE}.}

\item{groups}{(optional) character vector that specifies the group of \code{values}. Length must be the same as \code{values}. If this is set, the inner region of the pie will be filled to indicate groups.}

\item{groups.font}{(optional) font for \code{groups}. Default is "Arial".}

\item{groups.size}{(optional) desired font size in pixels for \code{groups}. Default is 10.}

\item{groups.color}{(optional) colors for \code{groups}. If not provided then D3 colors are generated.}

\item{groups.order}{(optional) ordering of \code{groups} = c("descending", "initial", "alphabetical"). Default is "descending".}

\item{prefix}{(optional) character, prefix for \code{labels}}

\item{suffix}{(optional) character, suffix for \code{labels}}

\item{border.color}{(optional) c("white", "none", hex colors)}

\item{gradient}{(optional) if \code{groups} is not provided, set this parameter to \code{TRUE} will generate gradient colors for \code{values} if \code{values.color} is not provided.}

\item{inner.radius}{(optional) specifies the pie inner radius as a percentage of the outer radius. Range is "0\%" to "100\%". Default is "80\%".}

\item{max.label.length}{(optional) sets custom label length constraint. Usually this does not need to be set and auto wrapping will apply.}
}
\value{
a donut plot
}
\description{
Create a Donut plot
}
\examples{
# load example data
data("browser", package = "rhtmlDonut")
# select a smaller subset
out = sort(values, decreasing = T, index.return = T)
values1 = out[[1]][1:30]
labels1 = labels[out[[2]]][1:30]
groups1 = groups[out[[2]]][1:30]
# a donut plot
rhtmlDonut::Donut(values = values1, labels = labels1, values.order = "descending", prefix = "", suffix = "\%")
rhtmlDonut::Donut(values = values1, labels = labels1, values.order = "descending", gradient = T, border.color = "none", prefix = "", suffix = "\%")
# a donut plot with groups
rhtmlDonut::Donut(values = values1, labels = labels1, groups = groups1, prefix = "", suffix = "\%")
}

